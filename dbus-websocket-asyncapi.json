{
  "asyncapi": "3.0.0",
  "info": {
    "title": "DBus WebSocket proxy API",
    "version": "0.0.1",
    "description": "WebSocket API to interact with DBus IPC protocol",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/mit"
    },
    "externalDocs": {
      "description": "DBus Specification",
      "url": "https://dbus.freedesktop.org/doc/dbus-specification.html"
    }
  },
  "defaultContentType": "application/json",
  "servers": {
    "default": {
      "host": "{host}:{port}",
      "protocol": "ws",
      "variables": {
        "host": {
          "$ref": "#/components/serverVariables/host"
        },
        "port": {
          "$ref": "#/components/serverVariables/port"
        }
      }
    }
  },
  "channels": {
    "webSocketV1": {
      "title": "WebSocket endpoint used to communicate with DBus server.",
      "address": "/ws/v1",
      "servers": [
        {
          "$ref": "#/servers/default"
        }
      ],
      "bindings": {
        "ws": {
          "method": "GET",
          "query": {
            "type": "object",
            "properties": {
              "connection": {
                "title": "DBus connection target",
                "description": "D-Bus is designed for two specific use cases:| A \"system bus\" for notifications from the system| to user sessions, and to allow the system to request| input from user sessions.| A \"session bus\" used to implement desktop environments| such as GNOME and KDE.",
                "type": "string",
                "enum": [
                  "session",
                  "system"
                ]
              }
            }
          }
        }
      },
      "messages": {
        "callMethod": {
          "$ref": "#/components/messages/callMethod"
        },
        "subscribeSignal": {
          "$ref": "#/components/messages/subscribeSignal"
        },
        "unsubscribeSignal": {
          "$ref": "#/components/messages/unsubscribeSignal"
        },
        "methodReturn": {
          "$ref": "#/components/messages/methodReturn"
        },
        "methodError": {
          "$ref": "#/components/messages/methodError"
        },
        "signal": {
          "$ref": "#/components/messages/signal"
        },
        "success": {
          "$ref": "#/components/messages/success"
        },
        "error": {
          "$ref": "#/components/messages/error"
        }
      }
    }
  },
  "operations": {
    "callMethod": {
      "title": "Call method",
      "summary": "Action to call DBus method.",
      "externalDocs": {
        "url": "https://dbus.freedesktop.org/doc/dbus-specification.html#message-protocol-types-method"
      },
      "channel": {
        "$ref": "#/channels/webSocketV1"
      },
      "action": "send",
      "messages": [
        {
          "$ref": "#/channels/webSocketV1/messages/callMethod"
        }
      ],
      "reply": {
        "channel": {
          "$ref": "#/channels/webSocketV1"
        },
        "messages": [
          {
            "$ref": "#/channels/webSocketV1/messages/methodReturn"
          },
          {
            "$ref": "#/channels/webSocketV1/messages/methodError"
          },
          {
            "$ref": "#/channels/webSocketV1/messages/error"
          }
        ]
      }
    },
    "subscribeSignal": {
      "title": "Subscribe signal",
      "summary": "Subscribe as receiver for a DBus signals. Subscriptions will be stored for existing connection.",
      "channel": {
        "$ref": "#/channels/webSocketV1"
      },
      "action": "send",
      "messages": [
        {
          "$ref": "#/channels/webSocketV1/messages/subscribeSignal"
        }
      ],
      "reply": {
        "channel": {
          "$ref": "#/channels/webSocketV1"
        },
        "messages": [
          {
            "$ref": "#/channels/webSocketV1/messages/success"
          },
          {
            "$ref": "#/channels/webSocketV1/messages/error"
          }
        ]
      }
    },
    "unsubscribeSignal": {
      "title": "Unsubscribe signal",
      "summary": "Unsubscribe as receiver for a DBus signals.",
      "channel": {
        "$ref": "#/channels/webSocketV1"
      },
      "action": "send",
      "messages": [
        {
          "$ref": "#/channels/webSocketV1/messages/unsubscribeSignal"
        }
      ],
      "reply": {
        "channel": {
          "$ref": "#/channels/webSocketV1"
        },
        "messages": [
          {
            "$ref": "#/channels/webSocketV1/messages/success"
          },
          {
            "$ref": "#/channels/webSocketV1/messages/error"
          }
        ]
      }
    },
    "signal": {
      "title": "Signal",
      "summary": "DBus signal received",
      "channel": {
        "$ref": "#/channels/webSocketV1"
      },
      "action": "receive",
      "messages": [
        {
          "$ref": "#/channels/webSocketV1/messages/signal"
        }
      ]
    },
    "error": {
      "title": "Application error",
      "summary": "Application error details",
      "channel": {
        "$ref": "#/channels/webSocketV1"
      },
      "action": "receive",
      "messages": [
        {
          "$ref": "#/channels/webSocketV1/messages/error"
        }
      ]
    }
  },
  "components": {
    "serverVariables": {
      "host": {
        "default": "127.0.0.1",
        "description": "WebSocket endpoint host"
      },
      "port": {
        "default": "2024",
        "description": "WebSocket endpoint port"
      }
    },
    "messages": {
      "callMethod": {
        "title": "DBus method call request",
        "name": "callMethod",
        "payload": {
          "type": "object",
          "required": [
            "CallMethod"
          ],
          "properties": {
            "CallMethod": {
              "type": "object",
              "required": [
                "path",
                "methodName"
              ],
              "properties": {
                "requestId": {
                  "$ref": "#/components/schemas/requestId"
                },
                "destination": {
                  "$ref": "#/components/schemas/busName"
                },
                "path": {
                  "$ref": "#/components/schemas/objectPathValue"
                },
                "interface": {
                  "$ref": "#/components/schemas/interfaceName"
                },
                "methodName": {
                  "$ref": "#/components/schemas/memberName"
                },
                "args": {
                  "title": "Method arguments",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/value"
                  }
                }
              }
            }
          }
        },
        "examples": [
          {
            "name": "KDENotification",
            "summary": "Show KDE Notification popup",
            "payload": {
              "CallMethod": {
                "requestId": 123,
                "destination": "org.freedesktop.Notifications",
                "path": "/org/freedesktop/Notifications",
                "interface": "org.freedesktop.Notifications",
                "methodName": "Notify",
                "args": [
                  {
                    "type": "string",
                    "value": "test-app"
                  },
                  {
                    "type": "u32",
                    "value": 0
                  },
                  {
                    "type": "string",
                    "value": "dialog-information"
                  },
                  {
                    "type": "string",
                    "value": "A summary"
                  },
                  {
                    "type": "string",
                    "value": "Some body"
                  },
                  {
                    "type": "array",
                    "valueType": "string"
                  },
                  {
                    "type": "dict",
                    "keyType": "string",
                    "valueType": "variant"
                  },
                  {
                    "type": "i32",
                    "value": 5000
                  }
                ]
              }
            }
          }
        ]
      },
      "subscribeSignal": {
        "title": "DBus signal subscription request",
        "name": "subscribeSignal",
        "payload": {
          "type": "object",
          "required": [
            "SubscribeSignal"
          ],
          "properties": {
            "SubscribeSignal": {
              "allOf": [
                {
                  "type": "object"
                },
                {
                  "properties": {
                    "requestId": {
                      "$ref": "#/components/schemas/requestId"
                    }
                  }
                },
                {
                  "$ref": "#/components/schemas/signalKey"
                }
              ]
            }
          },
          "examples": [
            {
              "name": "Subscribe for signal",
              "summary": "Subscribe for layout change signal",
              "payload": {
                "SubscribeSignal": {
                  "requestId": 345,
                  "destination": "org.kde.keyboard",
                  "path": "/Layouts",
                  "interface": "org.kde.KeyboardLayouts",
                  "name": "layoutChanged"
                }
              }
            }
          ]
        }
      },
      "unsubscribeSignal": {
        "title": "DBus signal unsubscription request",
        "name": "unsubscribeSignal",
        "payload": {
          "type": "object",
          "required": [
            "UnsubscribeSignal"
          ],
          "properties": {
            "UnsubscribeSignal": {
              "allOf": [
                {
                  "type": "object"
                },
                {
                  "properties": {
                    "requestId": {
                      "$ref": "#/components/schemas/requestId"
                    }
                  }
                },
                {
                  "$ref": "#/components/schemas/signalKey"
                }
              ]
            }
          },
          "examples": [
            {
              "name": "Unsubscribe from signal",
              "summary": "Unsubscribe from layout change signal",
              "payload": {
                "UnsubscribeSignal": {
                  "requestId": 345,
                  "destination": "org.kde.keyboard",
                  "path": "/Layouts",
                  "interface": "org.kde.KeyboardLayouts",
                  "name": "layoutChanged"
                }
              }
            }
          ]
        }
      },
      "methodReturn": {
        "title": "DBus method call result",
        "description": "DBus method call result will be sent if method was executed successfully",
        "name": "methodReturn",
        "payload": {
          "type": "object",
          "required": [
            "MethodReturn"
          ],
          "properties": {
            "MethodReturn": {
              "type": "object",
              "properties": {
                "requestId": {
                  "$ref": "#/components/schemas/requestId"
                },
                "args": {
                  "title": "Method result",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/value"
                  }
                }
              }
            }
          }
        }
      },
      "methodError": {
        "title": "DBus method call error",
        "description": "DBus method call error will be sent if method was executed with an error",
        "name": "methodError",
        "payload": {
          "type": "object",
          "required": [
            "MethodError"
          ],
          "properties": {
            "MethodError": {
              "type": "object",
              "properties": {
                "requestId": {
                  "$ref": "#/components/schemas/requestId"
                },
                "args": {
                  "title": "Method error parameters",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/value"
                  }
                }
              }
            }
          }
        }
      },
      "signal": {
        "title": "DBus signal",
        "description": "DBus signal received.",
        "name": "signal",
        "payload": {
          "type": "object",
          "required": [
            "Signal"
          ],
          "properties": {
            "Signal": {
              "type": "object",
              "properties": {
                "key": {
                  "$ref": "#/components/schemas/signalKey"
                },
                "args": {
                  "title": "Signal arguments values",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/value"
                  }
                }
              }
            }
          }
        }
      },
      "success": {
        "title": "Success",
        "description": "A general success message can be received as result of operations without result payloads",
        "name": "success",
        "payload": {
          "type": "object",
          "required": [
            "Success"
          ],
          "properties": {
            "Success": {
              "type": "object",
              "properties": {
                "requestId": {
                  "$ref": "#/components/schemas/requestId"
                }
              }
            }
          }
        }
      },
      "error": {
        "title": "Application error",
        "name": "error",
        "payload": {
          "type": "object",
          "required": [
            "Error"
          ],
          "properties": {
            "MethodError": {
              "type": "object",
              "required": [
                "errorType",
                "message"
              ],
              "properties": {
                "requestId": {
                  "$ref": "#/components/schemas/requestId"
                },
                "errorType": {
                  "title": "Error type",
                  "description": "Application error type",
                  "type": "string",
                  "enum": [
                    "DBusError",
                    "ServerError",
                    "UnsupportedFormat",
                    "JsonError",
                    "DBusFormatError",
                    "DBusValueError"
                  ]
                },
                "message": {
                  "title": "Error message",
                  "description": "Application error message",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "requestId": {
        "title": "Request id",
        "description": "Unsigned 64-bytes number that allows to trace requests, and match them with results.",
        "type": "number",
        "minimum": 0
      },
      "busName": {
        "title": "DBus bus name",
        "description": "DBus bus name. DBus connections have one or more bus names associated with them.",
        "externalDocs": {
          "url": "https://dbus.freedesktop.org/doc/dbus-specification.html#message-protocol-names-bus"
        },
        "type": "string",
        "pattern": "^:?[A-Za-z0-9_\\-]+(\\.[A-Za-z0-9_\\-]+)+$",
        "maxLength": 255
      },
      "interfaceName": {
        "title": "DBus interface name",
        "description": "DBus interface name.",
        "externalDocs": {
          "url": "https://dbus.freedesktop.org/doc/dbus-specification.html#message-protocol-names-interface"
        },
        "type": "string",
        "pattern": "^[A-Za-z_]+[A-Za-z0-9_]*(\\.[A-Za-z_]+[A-Za-z0-9_]*)+$",
        "maxLength": 255
      },
      "memberName": {
        "title": "DBus member name",
        "description": "DBus member name.",
        "externalDocs": {
          "url": "https://dbus.freedesktop.org/doc/dbus-specification.html#message-protocol-names-member"
        },
        "type": "string",
        "pattern": "^[A-Za-z_]+[A-Za-z0-9_]*$",
        "maxLength": 255
      },
      "signalKey": {
        "title": "Signal key",
        "description": "An unique indentifyer for DBus signal",
        "type": "object",
        "required": [
          "destination",
          "path",
          "interface",
          "methodName"
        ],
        "properties": {
          "destination": {
            "$ref": "#/components/schemas/busName"
          },
          "path": {
            "$ref": "#/components/schemas/objectPathValue"
          },
          "interface": {
            "$ref": "#/components/schemas/interfaceName"
          },
          "methodName": {
            "$ref": "#/components/schemas/memberName"
          },
          "args": {
            "type": "array",
            "title": "Signal arguments filter",
            "description": "Signals can be filtered by arguments. Only string arguments are supported.",
            "items": {
              "type": "array",
              "prefixItems": [
                {
                  "type": "integer",
                  "title": "Argument index",
                  "format": "int32",
                  "minimum": 0,
                  "maximum": 255
                },
                {
                  "type": "string",
                  "title": "Argument value"
                }
              ]
            }
          }
        }
      },
      "value": {
        "title": "DBus value",
        "externalDocs": {
          "url": "https://dbus.freedesktop.org/doc/dbus-specification.html#type-system"
        },
        "type": "object",
        "discriminator": "type",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "u8",
              "bool",
              "i16",
              "u16",
              "i32",
              "u32",
              "i64",
              "u64",
              "f64",
              "string",
              "signature",
              "objectPath",
              "fd",
              "variant",
              "array",
              "dict",
              "struct"
            ]
          }
        }
      },
      "u8": {
        "allOf": [
          {
            "$ref": "#/components/schemas/value"
          },
          {
            "title": "8-bit unsigned integer value",
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "maximum": 255
              }
            }
          }
        ]
      },
      "bool": {
        "allOf": [
          {
            "$ref": "#/components/schemas/value"
          },
          {
            "title": "Boolean value",
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "i16": {
        "allOf": [
          {
            "$ref": "#/components/schemas/value"
          },
          {
            "title": "16-bit signed integer value",
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32",
                "minimum": -32768,
                "maximum": 32767
              }
            }
          }
        ]
      },
      "u16": {
        "allOf": [
          {
            "$ref": "#/components/schemas/value"
          },
          {
            "title": "16-bit unsigned integer value",
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "maximum": 65535
              }
            }
          }
        ]
      },
      "i32": {
        "allOf": [
          {
            "$ref": "#/components/schemas/value"
          },
          {
            "title": "32-bit signed integer value",
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "u32": {
        "allOf": [
          {
            "$ref": "#/components/schemas/value"
          },
          {
            "title": "32-bit unsigned integer value",
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "integer",
                "format": "int64",
                "minimum": 0,
                "maximum": 4294967295
              }
            }
          }
        ]
      },
      "i64": {
        "allOf": [
          {
            "$ref": "#/components/schemas/value"
          },
          {
            "title": "64-bit signed integer value",
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "u64": {
        "allOf": [
          {
            "$ref": "#/components/schemas/value"
          },
          {
            "title": "64-bit signed integer value",
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "integer",
                "format": "int64",
                "minimum": 0
              }
            }
          }
        ]
      },
      "f64": {
        "allOf": [
          {
            "$ref": "#/components/schemas/value"
          },
          {
            "title": "64-bit float value",
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "number",
                "format": "double"
              }
            }
          }
        ]
      },
      "string": {
        "allOf": [
          {
            "$ref": "#/components/schemas/value"
          },
          {
            "title": "String value",
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "string"
              }
            }
          }
        ]
      },
      "signature": {
        "allOf": [
          {
            "$ref": "#/components/schemas/value"
          },
          {
            "title": "Signature",
            "externalDocs": {
              "url": "https://dbus.freedesktop.org/doc/dbus-specification.html#message-protocol-marshaling-signature"
            },
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 255,
                "pattern": "^[\\{\\}\\(\\)ybnqiuxtdsogavh].+$"
              }
            }
          }
        ]
      },
      "objectPath": {
        "allOf": [
          {
            "$ref": "#/components/schemas/value"
          },
          {
            "title": "Object Path",
            "externalDocs": {
              "url": "https://dbus.freedesktop.org/doc/dbus-specification.html#message-protocol-marshaling-object-path"
            },
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "$ref": "#/components/schemas/objectPathValue"
              }
            }
          }
        ]
      },
      "objectPathValue": {
        "title": "Object Path",
        "externalDocs": {
          "url": "https://dbus.freedesktop.org/doc/dbus-specification.html#message-protocol-marshaling-object-path"
        },
        "type": "string",
        "pattern": "^/([A-Za-z0-9_]+(/[A-Za-z0-9_]+)*)?$"
      },
      "fd": {
        "allOf": [
          {
            "$ref": "#/components/schemas/value"
          },
          {
            "title": "File Descriptor",
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "number"
              }
            }
          }
        ]
      },
      "variant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/value"
          },
          {
            "title": "Variant value",
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "$ref": "#/components/schemas/value"
              }
            }
          }
        ]
      },
      "array": {
        "allOf": [
          {
            "$ref": "#/components/schemas/value"
          },
          {
            "title": "Array value",
            "type": "object",
            "oneOf": [
              {
                "required": [
                  "value"
                ],
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/value"
                    }
                  }
                }
              },
              {
                "required": [
                  "valueType"
                ],
                "properties": {
                  "valueType": {
                    "$ref": "#/components/schemas/valueType"
                  }
                }
              }
            ]
          }
        ]
      },
      "dict": {
        "allOf": [
          {
            "$ref": "#/components/schemas/value"
          },
          {
            "title": "Dictionary value",
            "type": "object",
            "oneOf": [
              {
                "required": [
                  "value"
                ],
                "properties": {
                  "value": {
                    "type": "object",
                    "patternProperties": {
                      ".": {
                        "$ref": "#/components/schemas/value"
                      }
                    }
                  }
                }
              },
              {
                "$ref": "#/components/schemas/dictValueType"
              }
            ]
          }
        ]
      },
      "struct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/value"
          },
          {
            "title": "Structure value",
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/value"
                }
              }
            }
          }
        ]
      },
      "valueType": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/primitiveValueType"
          },
          {
            "$ref": "#/components/schemas/containerValueType"
          }
        ]
      },
      "primitiveValueType": {
        "type": "string",
        "enum": [
          "u8",
          "bool",
          "i16",
          "u16",
          "i32",
          "u32",
          "i64",
          "u64",
          "f64",
          "string",
          "signature",
          "objectPath",
          "fd"
        ]
      },
      "containerValueType": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/variantValueType"
          },
          {
            "$ref": "#/components/schemas/arrayValueType"
          },
          {
            "$ref": "#/components/schemas/dictValueType"
          },
          {
            "$ref": "#/components/schemas/structValueType"
          }
        ]
      },
      "variantValueType": {
        "type": "string",
        "const": "variant"
      },
      "arrayValueType": {
        "type": "object",
        "properties": {
          "valueType": {
            "$ref": "#/components/schemas/valueType"
          }
        }
      },
      "dictValueType": {
        "type": "object",
        "properties": {
          "keyType": {
            "$ref": "#/components/schemas/primitiveValueType"
          },
          "valueType": {
            "$ref": "#/components/schemas/valueType"
          }
        }
      },
      "structValueType": {
        "type": "object",
        "required": [
          "fields"
        ],
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/valueType"
            }
          }
        }
      }
    }
  }
}